"use client";

import React from "react";
import Image from "next/image";
import shift from "@/app/assets/ai-accelerators/vmware/openShift.webp";
import stack from "@/app/assets/ai-accelerators/vmware/openStack.webp";
import Nutanix from "@/app/assets/ai-accelerators/vmware/Nutanix.webp";
import HPE from "@/app/assets/ai-accelerators/vmware/HPE.webp";
import aws from "@/app/assets/ai-accelerators/vmware/aws.webp";
import Azure from "@/app/assets/ai-accelerators/vmware/Azure.webp";
import kvm from "@/app/assets/ai-accelerators/vmware/KVM.webp";
import { ArrowRight } from "lucide-react";
import Seamless from "@/app/assets/ai-accelerators/vmware/Seamless.webp";
import Workload from "@/app/assets/ai-accelerators/vmware/Workload.webp";
import ButtonLayout from "../utilities/ButtonLayout";
import buttonImage from "@/app/assets/home/buttonImg.webp";
import { motion } from "framer-motion";
import { showHubSpotForm } from "../utilities/showHubSpotForm";

const PrefferedPlatform = ({
  title = "Choose your preferred platform:",
  images = [
    {
      img: shift,
      alt: "Open shift",
    },
    {
      img: stack,
      alt: "Open Stack",
    },
    {
      img: Nutanix,
      alt: "Nutanix",
    },
    {
      img: HPE,
      alt: "HPE",
    },
    {
      img: aws,
      alt: "aws",
    },
    {
      img: Azure,
      alt: "azure",
    },
    {
      img: kvm,
      alt: "kvm",
    },
  ],
}) => {
  return (
    <div className="my-10">
      <div className="container space-y-6">
        <p className="text-[38px] font-semibold bg-[linear-gradient(to_right,#2E3092_25%,#ED1C24_50%)] bg-clip-text text-transparent">
          {title}
        </p>
        <div className="grid grid-cols-3 lg:grid-cols-4 xl:grid-cols-7 gap-8 justify-center">
          {images.map((ele, idx) => (
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: idx * 0.1 }}
              viewport={{ once: false, amount: 0.3 }}
              key={idx}
              className="flex-1 border-2 border-gray-300 bg-[#f7f7f7] rounded-xl p-1.5 flex justify-center items-center hover:scale-[103%] transition-all"
            >
              <Image src={ele.img} alt={ele.alt} className="object-cover" />
            </motion.div>
          ))}
        </div>
      </div>
    </div>
  );
};

const WhyMigrate = ({
  title = "Why migrate? Are you on the fence – let’s consider!",
  cardData = [
    {
      icon: (
        <svg
          width="34"
          height="34"
          viewBox="0 0 34 34"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M22.0689 0.902344C24.5808 0.902344 27.0926 0.902344 29.6942 0.902344C32.206 0.902344 34.0002 2.69652 34.0002 5.20836C34.0002 10.232 34.0002 15.3454 34.0002 20.3691C34.0002 22.881 32.206 24.6751 29.6942 24.6751C25.0293 24.6751 20.4542 24.6751 15.7893 24.6751C15.2511 24.6751 14.8923 24.406 14.8923 23.9575C14.8923 23.5089 15.1614 23.2398 15.5202 23.2398C15.6996 23.2398 15.7893 23.2398 15.9688 23.2398C20.5439 23.2398 25.119 23.2398 29.6942 23.2398C30.9501 23.2398 31.9369 22.5221 32.2957 21.3559C32.3854 21.0868 32.3854 20.8177 32.3854 20.5485C32.3854 15.4351 32.3854 10.4115 32.3854 5.29807C32.3854 3.5936 31.3089 2.5171 29.6045 2.5171C24.5808 2.5171 19.6468 2.5171 14.6231 2.5171C12.829 2.5171 11.7525 3.5936 11.7525 5.38777C11.7525 9.60408 11.7525 13.8204 11.7525 18.0367C11.7525 18.3058 11.7525 18.5749 11.573 18.8441C11.4833 19.1132 11.1245 19.2029 10.7657 19.1132C10.4068 19.0235 10.2274 18.8441 10.1377 18.4852C10.1377 18.1264 10.1377 17.8573 10.1377 17.4984C10.1377 13.4615 10.1377 9.33495 10.1377 5.29807C10.1377 2.69652 11.9319 0.902344 14.4437 0.902344C16.9556 0.902344 19.4674 0.902344 22.0689 0.902344Z"
            fill="white"
          />
          <path
            d="M0 26.6489C0 25.1239 0 23.5988 0 22.0738C0 20.3693 1.25592 19.2031 2.87067 19.2031C4.57514 19.2031 6.2796 19.2031 7.98407 19.2031C8.52232 19.2031 8.88115 19.4722 8.88115 20.0105C8.88115 20.459 8.52232 20.7282 8.07377 20.7282C7.53552 20.7282 7.08698 20.7282 6.54873 20.7282C5.38252 20.7282 4.2163 20.7282 3.05009 20.7282C2.0633 20.7282 1.61475 21.1767 1.61475 22.1635C1.61475 25.1239 1.61475 28.0843 1.61475 31.0447C1.61475 32.0315 2.0633 32.48 3.05009 32.48C6.01048 32.48 8.97086 32.48 11.9312 32.48C12.918 32.48 13.3666 31.9417 13.3666 30.955C13.3666 29.3402 13.3666 27.7254 13.3666 26.1107C13.3666 25.6621 13.546 25.393 13.9048 25.3033C14.3534 25.1239 14.8019 25.4827 14.8916 26.021C14.8916 26.6489 14.8916 27.3666 14.8916 27.9946C14.8916 29.0711 14.8916 30.0579 14.8916 31.1344C14.8916 32.7491 13.6357 34.005 12.021 34.005C8.97086 34.005 5.92077 34.005 2.87067 34.005C1.25592 34.005 0 32.7491 0 31.1344C0 31.1344 0 31.1344 0 31.0447C0 29.6093 0 28.0843 0 26.6489Z"
            fill="white"
          />
          <path
            d="M23.5932 9.51319C22.427 9.51319 21.2608 9.51319 20.0946 9.51319C19.9151 9.51319 19.8254 9.51319 19.646 9.51319C19.1975 9.42348 18.9283 9.15436 18.9283 8.79552C18.9283 8.43669 19.1975 8.07786 19.5563 8.07786C19.646 8.07786 19.7357 8.07786 19.8254 8.07786C21.7093 7.98815 23.5035 7.98815 25.3874 7.89844C26.0153 7.89844 26.3742 8.16756 26.2845 8.88523C26.2845 10.7691 26.1947 12.653 26.105 14.4472C26.105 14.9854 25.7462 15.2545 25.2977 15.2545C24.8491 15.2545 24.58 14.8957 24.58 14.3575C24.58 13.1912 24.6697 12.1147 24.6697 10.9485C24.6697 10.8588 24.6697 10.7691 24.6697 10.5897C24.58 10.6794 24.4903 10.7691 24.4006 10.8588C21.9784 13.281 19.5563 15.7031 17.1342 18.1252C14.2635 20.9959 11.3031 23.9563 8.43244 26.9167C8.16332 27.1858 7.9839 27.3652 7.53536 27.1858C7.26623 27.0064 7.08681 26.827 7.08681 26.4681C6.9971 26.199 7.17652 25.9299 7.44565 25.7505C9.59865 23.5974 11.662 21.5341 13.815 19.3811C17.0445 16.1516 20.274 12.9221 23.5035 9.69261C23.5035 9.69261 23.5035 9.6029 23.5932 9.51319Z"
            fill="white"
          />
        </svg>
      ),
      title: "Rising VMware costs",
      description:
        "Licensing model changes (VMware) are driving up TCO, boosting migration considerations.",
      variant: "blue",
    },
    {
      icon: (
        <svg
          width="37"
          height="45"
          viewBox="0 0 37 45"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M33.1953 34.8047H3.80469C2.11719 34.8047 0.710938 36.2109 0.710938 37.8984V41.1328C0.710938 42.8203 2.11719 44.2266 3.80469 44.2266H33.125C34.8828 44.2266 36.2188 42.8906 36.2188 41.1328V37.8984C36.2891 36.2109 34.8828 34.8047 33.1953 34.8047ZM35.0938 41.1328C35.0938 42.2578 34.25 43.0313 33.1953 43.0313H3.80469C2.75 43.0313 1.90625 42.1875 1.90625 41.1328V37.8984C1.90625 36.8438 2.75 36 3.80469 36H33.125C34.1797 36 35.0234 36.8438 35.0234 37.8984V41.1328H35.0938Z"
            fill="#2E3092"
          />
          <path
            d="M19.6953 38.25C18.9219 38.25 18.2891 38.8828 18.2891 39.6562C18.2891 40.4297 18.9219 41.0625 19.6953 41.0625C20.4688 41.0625 21.1016 40.4297 21.1016 39.6562C21.1016 38.8828 20.4688 38.25 19.6953 38.25ZM19.4844 39.6562C19.4844 39.5859 19.5547 39.4453 19.6953 39.4453C19.8359 39.4453 19.9062 39.5156 19.9062 39.6562C19.8359 39.8672 19.4844 39.8672 19.4844 39.6562Z"
            fill="#2E3092"
          />
          <path
            d="M24.6875 38.25C23.9141 38.25 23.2812 38.8828 23.2812 39.6562C23.2812 40.4297 23.9141 41.0625 24.6875 41.0625C25.4609 41.0625 26.0938 40.4297 26.0938 39.6562C26.0938 38.8828 25.4609 38.25 24.6875 38.25ZM24.4766 39.6562C24.4766 39.5859 24.5469 39.4453 24.6875 39.4453C24.8281 39.4453 24.8984 39.5156 24.8984 39.6562C24.8984 39.8672 24.4766 39.8672 24.4766 39.6562Z"
            fill="#2E3092"
          />
          <path
            d="M29.75 38.25C28.9766 38.25 28.3438 38.8828 28.3438 39.6562C28.3438 40.4297 28.9766 41.0625 29.75 41.0625C30.5234 41.0625 31.1562 40.4297 31.1562 39.6562C31.1562 38.8828 30.4531 38.25 29.75 38.25ZM29.5391 39.6562C29.5391 39.5859 29.6094 39.4453 29.75 39.4453C29.8906 39.4453 29.9609 39.5156 29.9609 39.6562C29.8906 39.8672 29.5391 39.8672 29.5391 39.6562Z"
            fill="#2E3092"
          />
          <path
            d="M4.71875 13.8516C5.28125 17.1563 7.10937 27.2109 18.1484 34.3125C18.2187 34.3828 18.3594 34.3828 18.5 34.3828C18.6406 34.3828 18.7109 34.3828 18.8516 34.3125C19.7656 33.75 20.6094 33.1172 21.4531 32.4844C27.1484 27.9844 30.8047 21.8672 32.0703 14.625C32.3516 13.0781 32.4922 11.6719 32.5625 10.6172C32.6328 10.0547 32.6328 9.63281 32.7031 9.35156C32.7031 9.21094 32.7031 9.07031 32.6328 8.92969C29.4687 3.375 18.9922 0.492188 18.5703 0.421875C18.4297 0.421875 18.3594 0.421875 18.2188 0.421875C18.0781 0.421875 15.4766 1.26562 12.4531 2.60156C9.78125 3.86719 5.98438 5.90625 4.29688 8.92969C4.22656 9.07031 4.22656 9.21094 4.22656 9.35156C4.29688 9.98438 4.4375 10.8984 4.57812 12.0234C4.57812 12.5859 4.64844 13.2188 4.71875 13.8516ZM17.5859 32.4844C17.4453 32.4141 17.375 32.3438 17.2344 32.2734C17.0234 32.1328 16.8828 31.9922 16.6719 31.8516C16.5313 31.7813 16.4609 31.6406 16.3203 31.5703C16.1797 31.4297 15.9688 31.2891 15.8281 31.2188C15.6875 31.1484 15.6172 31.0078 15.4766 30.9375C15.3359 30.7969 15.1953 30.7266 15.0547 30.5859C14.9141 30.4453 14.8438 30.375 14.7031 30.2344C14.5625 30.0938 14.4219 30.0234 14.3516 29.8828C14.2109 29.7422 14.1406 29.6719 14 29.5313C13.8594 29.3906 13.7891 29.3203 13.6484 29.1797C13.5078 29.0391 13.4375 28.9688 13.2969 28.8281C13.2266 28.6875 13.0859 28.6172 13.0156 28.4766C12.875 28.3359 12.8047 28.1953 12.6641 28.125C12.5938 27.9844 12.4531 27.9141 12.3828 27.7734C12.2422 27.6328 12.1719 27.4922 12.0312 27.3516C11.9609 27.2813 11.8906 27.1406 11.75 27.0703C11.6094 26.9297 11.5391 26.7891 11.3984 26.6484C11.3281 26.5781 11.2578 26.4375 11.1875 26.3672C11.1172 26.2266 10.9766 26.0859 10.9063 25.9453C10.8359 25.875 10.7656 25.7344 10.6953 25.6641C10.625 25.5234 10.4844 25.3828 10.4141 25.2422C10.3438 25.1719 10.2734 25.1016 10.2734 24.9609C10.2031 24.8203 10.0625 24.6797 9.99219 24.5391C9.92188 24.4688 9.92188 24.3984 9.85156 24.3281C9.78125 24.1875 9.64062 24.0469 9.57031 23.8359C9.5 23.7656 9.5 23.6953 9.42969 23.625C9.35938 23.4844 9.21875 23.2734 9.14844 23.1328C9.14844 23.0625 9.07813 22.9922 9.07813 22.9219C9.00781 22.7812 8.86719 22.5703 8.79688 22.4297C8.79688 22.3594 8.72656 22.3594 8.72656 22.2891C8.65625 22.0781 8.58594 21.9375 8.44531 21.7969C8.44531 21.7266 8.375 21.7266 8.375 21.6563C8.30469 21.4453 8.23438 21.3047 8.09375 21.0938C8.09375 21.0938 8.09375 21.0234 8.02344 21.0234C7.95313 20.8125 7.88281 20.6719 7.8125 20.4609V20.3906C7.74219 20.1797 7.67188 19.9688 7.60156 19.8281C6.6875 17.3672 6.26563 15.2578 6.05469 13.9922C7.46094 12.375 9.71094 10.8281 12.7344 9.42188C15.2656 8.29688 17.5156 7.59375 18.1484 7.38281C19.4141 7.73438 27.9922 10.1953 30.9453 14.6953C30.875 14.9063 30.875 15.1172 30.8047 15.2578C30.7344 15.5391 30.7344 15.75 30.6641 16.0313C30.5937 16.2422 30.5234 16.5234 30.5234 16.7344C30.4531 16.9453 30.3828 17.2266 30.3125 17.4375C30.2422 17.6484 30.1719 17.8594 30.1016 18.1406C30.0312 18.3516 29.9609 18.6328 29.8906 18.8438C29.8203 19.0547 29.75 19.2656 29.6797 19.5469C29.6094 19.7578 29.5391 19.9688 29.3984 20.25C29.3281 20.4609 29.1875 20.6719 29.1172 20.8828C29.0469 21.0938 28.9062 21.3047 28.8359 21.5156C28.7656 21.7266 28.625 21.9375 28.5547 22.1484C28.4844 22.3594 28.3438 22.5703 28.2734 22.7813C28.1328 22.9922 28.0625 23.2031 27.9219 23.4141C27.7812 23.625 27.7109 23.8359 27.5703 23.9766C27.4297 24.1875 27.2891 24.3984 27.1484 24.6094C27.0078 24.8203 26.9375 24.9609 26.7969 25.1719C26.6562 25.3828 26.5156 25.5938 26.375 25.8047C26.2344 26.0156 26.1641 26.1563 26.0234 26.3672C25.8828 26.5781 25.6719 26.7891 25.5312 27C25.3906 27.1406 25.25 27.3516 25.1094 27.4922C24.9688 27.7031 24.7578 27.9141 24.6172 28.125C24.4766 28.2656 24.3359 28.4063 24.1953 28.6172C23.9844 28.8281 23.8437 29.0391 23.6328 29.25C23.4922 29.3906 23.3516 29.5313 23.2109 29.6719C23 29.8828 22.7891 30.0938 22.5781 30.2344C22.4375 30.375 22.2969 30.5156 22.1562 30.6563C21.9453 30.8672 21.7344 31.0781 21.4531 31.2188C21.3125 31.3594 21.1719 31.4297 21.0312 31.5703C20.75 31.7813 20.5391 31.9922 20.2578 32.1328C20.1172 32.2031 19.9766 32.3438 19.8359 32.4141C19.4141 32.6953 19.0625 32.9766 18.6406 33.2578C18.1484 32.9063 17.8672 32.6953 17.5859 32.4844ZM12.9453 3.72656C15.4062 2.60156 17.7266 1.89844 18.3594 1.6875C19.6953 2.03906 28.625 4.78125 31.4375 9.42188C31.3672 9.77344 31.3672 10.125 31.2969 10.6172C31.2266 11.3203 31.1562 12.1641 31.0156 13.0781C27.1484 8.4375 18.5703 6.1875 18.1484 6.11719C18.0781 6.11719 17.9375 6.11719 17.8672 6.11719C17.7266 6.11719 15.125 6.96094 12.1016 8.29688C9.35938 9.5625 7.25 10.9688 5.70313 12.4453C5.70313 12.3047 5.63281 12.1641 5.63281 12.0234C5.49219 10.9688 5.42188 10.125 5.35156 9.49219C7.03906 6.75 10.4844 4.85156 12.9453 3.72656Z"
            fill="#2E3092"
          />
          <path
            d="M23.0703 22.0781V18C23.0703 17.4375 22.7891 16.9453 22.4375 16.5938V15.4688C22.3672 13.9219 21.1016 12.5859 19.4844 12.5859H17.5156C17.0938 12.5859 16.8125 12.6563 16.4609 12.7969C15.8984 13.0078 15.4766 13.3594 15.125 13.8516C14.7734 14.3438 14.6328 14.9063 14.6328 15.4688V16.6641C14.2109 17.0156 14 17.4375 14 18.0703V22.1484C14 23.1328 14.7734 23.9062 15.7578 23.9062H21.3828C22.3672 23.7656 23.0703 22.9922 23.0703 22.0781ZM15.6875 22.5703C15.3359 22.5703 15.125 22.2891 15.125 22.0078V17.9297C15.125 17.5781 15.4062 17.3672 15.6875 17.3672V15.4688C15.6875 15.0469 15.8281 14.7656 15.9687 14.4844C16.1797 14.2031 16.4609 13.9219 16.7422 13.9219C16.9531 13.8516 17.2344 13.7813 17.375 13.7813H19.4141C20.3281 13.7813 21.1719 14.5547 21.1719 15.5391V17.4375H21.3125C21.6641 17.4375 21.875 17.7188 21.875 18V22.0781C21.875 22.4297 21.5937 22.6406 21.3125 22.6406H15.6875V22.5703Z"
            fill="#2E3092"
          />
          <path
            d="M18.8516 14.1328H18.1484C17.7969 14.1328 17.4453 14.2734 17.0938 14.4141C16.7422 14.6953 16.4609 15.1875 16.4609 15.75C16.4609 15.9609 16.4609 16.5234 16.4609 16.5234L16.3906 17.8594H17.7266H19.3438H20.6094V16.6641V15.8906C20.5391 14.9766 19.8359 14.2031 18.8516 14.1328ZM19.2734 16.6641H17.6562C17.6562 16.6641 17.6562 16.1016 17.6562 15.8906C17.6562 15.75 17.7266 15.6094 17.7969 15.5391C17.8672 15.4688 17.9375 15.3984 18.0781 15.3984H18.6406H18.7813C19.0625 15.3984 19.2031 15.6094 19.2031 15.8203V16.6641H19.2734Z"
            fill="#2E3092"
          />
        </svg>
      ),
      title: "Avoid vendor lock-in",
      description:
        "Gain flexibility with futureready architectures that allow multi-cloud, hybrid, and opensource options.",
      variant: "white",
    },
    {
      icon: (
        <svg
          width="50"
          height="50"
          viewBox="0 0 50 50"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M41.6406 18.4375C40.8594 18.4375 40.1562 18.5156 39.5312 18.6719C39.6094 18.4375 39.6094 18.125 39.6094 17.8906C39.6094 15.0781 37.3438 12.8125 34.5312 12.8125C33.6719 12.8125 32.8906 13.0469 32.1094 13.4375C30.0781 8.90625 25.4688 5.85938 20.3906 5.85938C13.3594 5.85938 7.57812 11.5625 7.5 18.5156C3.59375 18.8281 0.46875 22.1875 0.46875 26.1719C0.46875 30.3906 3.90625 33.9063 8.20312 33.9063H16.7188C17.1094 33.9063 17.4219 33.5937 17.4219 33.2812C17.4219 32.9687 17.1094 32.6562 16.7188 32.6562H8.20312C4.6875 32.6562 1.79688 29.7656 1.79688 26.25C1.79688 22.7344 4.6875 19.8438 8.20312 19.8438C8.59375 19.8438 8.90625 19.5312 8.90625 19.1406V18.75C8.90625 12.3438 14.0625 7.1875 20.4688 7.1875C25.2344 7.1875 29.6094 10.1562 31.25 14.6875C31.3281 14.9219 31.4844 15 31.7188 15.0781C31.9531 15.1562 32.1094 15.0781 32.3438 15C33.0469 14.4531 33.8281 14.2188 34.6875 14.2188C36.7188 14.2188 38.4375 15.9375 38.4375 17.9688C38.4375 18.5938 38.2812 19.2188 38.0469 19.5312C37.8906 19.7656 37.8906 20.1562 38.125 20.3125C38.3594 20.4688 38.6719 20.625 38.9062 20.4688C39.6875 20 40.7031 19.7656 41.7969 19.7656C45.3125 19.7656 48.2031 22.6562 48.2031 26.1719C48.2031 29.6875 45.3125 32.5781 41.7969 32.5781H40.8594C40.4688 32.5781 40.2344 32.8906 40.2344 33.2031C40.2344 33.5156 40.5469 33.8281 40.8594 33.8281H41.7969C46.0156 33.8281 49.5313 30.3906 49.5313 26.0938C49.375 21.9531 45.9375 18.4375 41.6406 18.4375Z"
            fill="white"
          />
          <path
            d="M28.5156 19.8438C28.4375 19.8438 28.2812 19.8438 28.125 19.8438C28.0469 19.8438 26.3281 20.3906 24.375 21.25C22.5781 22.1094 20.0781 23.5156 18.9063 25.5469C18.8281 25.7031 18.8281 25.8594 18.8281 25.9375C18.8281 26.1719 18.9062 26.5625 18.9844 26.9531C19.0625 27.5 19.1406 28.125 19.2188 28.8281C20.2344 34.7656 23.125 39.2188 28.125 42.3438C28.2031 42.4219 28.3594 42.4219 28.5156 42.4219C28.6719 42.4219 28.75 42.4219 28.9062 42.3438C34.9219 38.4375 36.9531 33.125 37.5781 29.375C37.8125 28.2812 37.8906 27.2656 37.9687 26.5625C37.9687 26.3281 37.9688 26.0938 38.0469 25.9375C38.0469 25.7813 38.0469 25.625 37.9687 25.5469C35.625 21.7188 28.75 19.9219 28.5156 19.8438ZM24.9219 22.4219C26.4844 21.7188 27.8125 21.3281 28.3594 21.1719C29.375 21.4844 34.7656 23.125 36.5625 26.0156C36.5625 26.1719 36.5625 26.3281 36.4844 26.4844C36.4844 26.7969 36.4062 27.1875 36.4062 27.6563C33.6719 24.9219 28.5156 23.5156 28.2031 23.4375C28.125 23.4375 27.9687 23.4375 27.8125 23.4375C27.7344 23.4375 26.0156 23.9844 24.0625 24.8437C22.8906 25.3906 21.4062 26.1719 20.2344 27.1875C20.2344 27.0312 20.2344 26.875 20.1562 26.7188C20.1562 26.4063 20.0781 26.0938 20.0781 25.9375C21.1719 24.375 23.3594 23.2031 24.9219 22.4219ZM26.875 39.8438C26.7188 39.6875 26.5625 39.5312 26.4062 39.4531C26.0937 39.2188 25.7812 38.9063 25.4687 38.5938C25.3125 38.4375 25.0781 38.2031 24.9219 37.9688C24.6875 37.7344 24.4531 37.5 24.2187 37.1875C24.0625 36.9531 23.8281 36.7188 23.6719 36.4844C23.5156 36.25 23.2812 36.0156 23.125 35.7812C22.9688 35.4688 22.8125 35.2344 22.6562 34.9219C22.5 34.6875 22.3437 34.4531 22.2656 34.2188C22.1094 33.9062 21.9531 33.5937 21.875 33.2812C21.7969 33.0469 21.6406 32.8125 21.5625 32.5781C21.4062 32.2656 21.3281 31.875 21.25 31.5625C21.1719 31.3281 21.0937 31.0156 21.0156 30.7813C20.9375 30.4688 20.8594 30.0781 20.7812 29.7656C20.7031 29.5312 20.625 29.2187 20.625 28.9844C21.7187 27.7344 23.4375 26.7969 24.7656 26.1719C26.3281 25.4688 27.6562 25.0781 28.2031 24.9219C29.2187 25.2344 34.375 26.7969 36.25 29.4531C36.25 29.5313 36.25 29.6094 36.25 29.6875C36.25 29.7656 36.1719 29.9219 36.1719 30C36.1719 30.0781 36.0938 30.2344 36.0938 30.3125C36.0938 30.3906 36.0156 30.5469 36.0156 30.625C36.0156 30.7031 35.9375 30.8594 35.9375 31.0156C35.9375 31.1719 35.8594 31.25 35.8594 31.4063C35.8594 31.5625 35.7812 31.6406 35.7812 31.7969C35.7812 31.9531 35.7031 32.0313 35.625 32.1875C35.5469 32.3438 35.5469 32.4219 35.4688 32.5781C35.2344 32.5781 35.1562 32.6562 35.1562 32.8125C35.0781 32.9688 35.0781 33.0469 35 33.2031C34.9219 33.3594 34.9219 33.4375 34.8437 33.5938C34.7656 33.75 34.6875 33.8281 34.6875 33.9844C34.6094 34.1406 34.5312 34.2188 34.5312 34.375C34.4531 34.5312 34.375 34.6094 34.2969 34.7656C34.2188 34.9219 34.1406 35 34.0625 35.1562C33.9844 35.3125 33.9062 35.3906 33.8281 35.5469C33.75 35.7031 33.6719 35.7812 33.5938 35.9375C33.5156 36.0938 33.4375 36.1719 33.2812 36.3281C33.2031 36.4844 33.125 36.5625 33.0469 36.7188C32.9687 36.875 32.8125 37.0312 32.7344 37.1094C32.6563 37.2656 32.5781 37.3438 32.4219 37.5C32.3438 37.6562 32.1875 37.8125 32.0312 37.8906C31.9531 37.9688 31.875 38.125 31.7187 38.2031C31.5625 38.3594 31.4844 38.5156 31.3281 38.5938C31.25 38.6719 31.0938 38.8281 31.0156 38.9062C30.8594 39.0625 30.7031 39.2188 30.5469 39.375C30.4687 39.4531 30.3125 39.6094 30.2344 39.6875C30.0781 39.8438 29.8438 40 29.6875 40.1563C29.6094 40.2344 29.5312 40.3125 29.375 40.3906C29.0625 40.625 28.75 40.8594 28.4375 41.0938C27.8906 40.625 27.3438 40.2344 26.875 39.8438Z"
            fill="white"
          />
          <path
            d="M32.8905 28.7491C32.6562 28.4366 32.2655 28.4366 31.953 28.671L27.3437 32.3428L24.7655 30.3116C24.453 30.0772 24.0624 30.1553 23.828 30.3897C23.5937 30.7022 23.6718 31.0928 23.9062 31.3272L26.8749 33.671C27.0312 33.7491 27.1093 33.8272 27.2655 33.8272C27.4218 33.8272 27.578 33.7491 27.6562 33.671L32.8124 29.6866C33.1249 29.4522 33.1249 28.9835 32.8905 28.7491Z"
            fill="white"
          />
        </svg>
      ),
      title: "Cloud-native capabilities",
      description:
        "Move to modern, automated, and AI-driven environments for better performance and scalability.",
      variant: "blue",
    },
    {
      icon: (
        <svg
          width="50"
          height="50"
          viewBox="0 0 50 50"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M41.6406 18.4375C40.8594 18.4375 40.1562 18.5156 39.5312 18.6719C39.6094 18.4375 39.6094 18.125 39.6094 17.8906C39.6094 15.0781 37.3438 12.8125 34.5312 12.8125C33.6719 12.8125 32.8906 13.0469 32.1094 13.4375C30.0781 8.90625 25.4688 5.85938 20.3906 5.85938C13.3594 5.85938 7.57812 11.5625 7.5 18.5156C3.59375 18.8281 0.46875 22.1875 0.46875 26.1719C0.46875 30.3906 3.90625 33.9063 8.20312 33.9063H16.7188C17.1094 33.9063 17.4219 33.5937 17.4219 33.2812C17.4219 32.9687 17.1094 32.6562 16.7188 32.6562H8.20312C4.6875 32.6562 1.79688 29.7656 1.79688 26.25C1.79688 22.7344 4.6875 19.8438 8.20312 19.8438C8.59375 19.8438 8.90625 19.5312 8.90625 19.1406V18.75C8.90625 12.3438 14.0625 7.1875 20.4688 7.1875C25.2344 7.1875 29.6094 10.1562 31.25 14.6875C31.3281 14.9219 31.4844 15 31.7188 15.0781C31.9531 15.1562 32.1094 15.0781 32.3438 15C33.0469 14.4531 33.8281 14.2188 34.6875 14.2188C36.7188 14.2188 38.4375 15.9375 38.4375 17.9688C38.4375 18.5938 38.2812 19.2188 38.0469 19.5312C37.8906 19.7656 37.8906 20.1562 38.125 20.3125C38.3594 20.4688 38.6719 20.625 38.9062 20.4688C39.6875 20 40.7031 19.7656 41.7969 19.7656C45.3125 19.7656 48.2031 22.6562 48.2031 26.1719C48.2031 29.6875 45.3125 32.5781 41.7969 32.5781H40.8594C40.4688 32.5781 40.2344 32.8906 40.2344 33.2031C40.2344 33.5156 40.5469 33.8281 40.8594 33.8281H41.7969C46.0156 33.8281 49.5313 30.3906 49.5313 26.0938C49.375 21.9531 45.9375 18.4375 41.6406 18.4375Z"
            fill="white"
          />
          <path
            d="M28.5156 19.8438C28.4375 19.8438 28.2812 19.8438 28.125 19.8438C28.0469 19.8438 26.3281 20.3906 24.375 21.25C22.5781 22.1094 20.0781 23.5156 18.9063 25.5469C18.8281 25.7031 18.8281 25.8594 18.8281 25.9375C18.8281 26.1719 18.9062 26.5625 18.9844 26.9531C19.0625 27.5 19.1406 28.125 19.2188 28.8281C20.2344 34.7656 23.125 39.2188 28.125 42.3438C28.2031 42.4219 28.3594 42.4219 28.5156 42.4219C28.6719 42.4219 28.75 42.4219 28.9062 42.3438C34.9219 38.4375 36.9531 33.125 37.5781 29.375C37.8125 28.2812 37.8906 27.2656 37.9687 26.5625C37.9687 26.3281 37.9688 26.0938 38.0469 25.9375C38.0469 25.7813 38.0469 25.625 37.9687 25.5469C35.625 21.7188 28.75 19.9219 28.5156 19.8438ZM24.9219 22.4219C26.4844 21.7188 27.8125 21.3281 28.3594 21.1719C29.375 21.4844 34.7656 23.125 36.5625 26.0156C36.5625 26.1719 36.5625 26.3281 36.4844 26.4844C36.4844 26.7969 36.4062 27.1875 36.4062 27.6563C33.6719 24.9219 28.5156 23.5156 28.2031 23.4375C28.125 23.4375 27.9687 23.4375 27.8125 23.4375C27.7344 23.4375 26.0156 23.9844 24.0625 24.8437C22.8906 25.3906 21.4062 26.1719 20.2344 27.1875C20.2344 27.0312 20.2344 26.875 20.1562 26.7188C20.1562 26.4063 20.0781 26.0938 20.0781 25.9375C21.1719 24.375 23.3594 23.2031 24.9219 22.4219ZM26.875 39.8438C26.7188 39.6875 26.5625 39.5312 26.4062 39.4531C26.0937 39.2188 25.7812 38.9063 25.4687 38.5938C25.3125 38.4375 25.0781 38.2031 24.9219 37.9688C24.6875 37.7344 24.4531 37.5 24.2187 37.1875C24.0625 36.9531 23.8281 36.7188 23.6719 36.4844C23.5156 36.25 23.2812 36.0156 23.125 35.7812C22.9688 35.4688 22.8125 35.2344 22.6562 34.9219C22.5 34.6875 22.3437 34.4531 22.2656 34.2188C22.1094 33.9062 21.9531 33.5937 21.875 33.2812C21.7969 33.0469 21.6406 32.8125 21.5625 32.5781C21.4062 32.2656 21.3281 31.875 21.25 31.5625C21.1719 31.3281 21.0937 31.0156 21.0156 30.7813C20.9375 30.4688 20.8594 30.0781 20.7812 29.7656C20.7031 29.5312 20.625 29.2187 20.625 28.9844C21.7187 27.7344 23.4375 26.7969 24.7656 26.1719C26.3281 25.4688 27.6562 25.0781 28.2031 24.9219C29.2187 25.2344 34.375 26.7969 36.25 29.4531C36.25 29.5313 36.25 29.6094 36.25 29.6875C36.25 29.7656 36.1719 29.9219 36.1719 30C36.1719 30.0781 36.0938 30.2344 36.0938 30.3125C36.0938 30.3906 36.0156 30.5469 36.0156 30.625C36.0156 30.7031 35.9375 30.8594 35.9375 31.0156C35.9375 31.1719 35.8594 31.25 35.8594 31.4063C35.8594 31.5625 35.7812 31.6406 35.7812 31.7969C35.7812 31.9531 35.7031 32.0313 35.625 32.1875C35.5469 32.3438 35.5469 32.4219 35.4688 32.5781C35.2344 32.5781 35.1562 32.6562 35.1562 32.8125C35.0781 32.9688 35.0781 33.0469 35 33.2031C34.9219 33.3594 34.9219 33.4375 34.8437 33.5938C34.7656 33.75 34.6875 33.8281 34.6875 33.9844C34.6094 34.1406 34.5312 34.2188 34.5312 34.375C34.4531 34.5312 34.375 34.6094 34.2969 34.7656C34.2188 34.9219 34.1406 35 34.0625 35.1562C33.9844 35.3125 33.9062 35.3906 33.8281 35.5469C33.75 35.7031 33.6719 35.7812 33.5938 35.9375C33.5156 36.0938 33.4375 36.1719 33.2812 36.3281C33.2031 36.4844 33.125 36.5625 33.0469 36.7188C32.9687 36.875 32.8125 37.0312 32.7344 37.1094C32.6563 37.2656 32.5781 37.3438 32.4219 37.5C32.3438 37.6562 32.1875 37.8125 32.0312 37.8906C31.9531 37.9688 31.875 38.125 31.7187 38.2031C31.5625 38.3594 31.4844 38.5156 31.3281 38.5938C31.25 38.6719 31.0938 38.8281 31.0156 38.9062C30.8594 39.0625 30.7031 39.2188 30.5469 39.375C30.4687 39.4531 30.3125 39.6094 30.2344 39.6875C30.0781 39.8438 29.8438 40 29.6875 40.1563C29.6094 40.2344 29.5312 40.3125 29.375 40.3906C29.0625 40.625 28.75 40.8594 28.4375 41.0938C27.8906 40.625 27.3438 40.2344 26.875 39.8438Z"
            fill="white"
          />
          <path
            d="M32.8905 28.7491C32.6562 28.4366 32.2655 28.4366 31.953 28.671L27.3437 32.3428L24.7655 30.3116C24.453 30.0772 24.0624 30.1553 23.828 30.3897C23.5937 30.7022 23.6718 31.0928 23.9062 31.3272L26.8749 33.671C27.0312 33.7491 27.1093 33.8272 27.2655 33.8272C27.4218 33.8272 27.578 33.7491 27.6562 33.671L32.8124 29.6866C33.1249 29.4522 33.1249 28.9835 32.8905 28.7491Z"
            fill="white"
          />
        </svg>
      ),
      title: "Performance & security",
      description:
        "Next-gen platforms provide stronger security, automated patching, and regulatory compliance.",
      variant: "white",
    },
    {
      icon: (
        <svg
          width="47"
          height="47"
          viewBox="0 0 47 47"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17.6242 21.3711C16.743 21.3711 16.082 22.1055 16.082 22.9133C16.082 23.7211 16.8164 24.4555 17.6242 24.4555C18.432 24.4555 19.1664 23.7211 19.1664 22.9133C19.1664 22.1055 18.5055 21.3711 17.6242 21.3711ZM17.6242 23.207C17.4773 23.207 17.3305 23.0602 17.3305 22.9133C17.3305 22.7664 17.4773 22.6195 17.6242 22.6195C17.7711 22.6195 17.918 22.7664 17.918 22.9133C17.918 23.0602 17.7711 23.207 17.6242 23.207Z"
            fill="white"
          />
          <path
            d="M21.7375 21.3711C20.8563 21.3711 20.1953 22.1055 20.1953 22.9133C20.1953 23.7211 20.9297 24.4555 21.7375 24.4555C22.5453 24.4555 23.2797 23.7211 23.2797 22.9133C23.2797 22.1055 22.6188 21.3711 21.7375 21.3711ZM21.7375 23.207C21.5906 23.207 21.4438 23.0602 21.4438 22.9133C21.4438 22.7664 21.5906 22.6195 21.7375 22.6195C21.8844 22.6195 22.0312 22.7664 22.0312 22.9133C22.0312 23.0602 21.8844 23.207 21.7375 23.207Z"
            fill="white"
          />
          <path
            d="M25.7766 21.3711C24.8953 21.3711 24.2344 22.1055 24.2344 22.9133C24.2344 23.7211 24.9687 24.4555 25.7766 24.4555C26.5844 24.4555 27.3188 23.7211 27.3188 22.9133C27.3188 22.1055 26.6578 21.3711 25.7766 21.3711ZM25.7766 23.207C25.6297 23.207 25.4828 23.0602 25.4828 22.9133C25.4828 22.7664 25.6297 22.6195 25.7766 22.6195C25.9234 22.6195 26.0703 22.7664 26.0703 22.9133C26.0703 23.0602 25.9969 23.207 25.7766 23.207Z"
            fill="white"
          />
          <path
            d="M17.6984 28.9375C16.8172 28.9375 16.1562 29.6719 16.1562 30.4797C16.1562 31.2875 16.8906 32.0219 17.6984 32.0219C18.5063 32.0219 19.2406 31.2875 19.2406 30.4797C19.2406 29.6719 18.5797 28.9375 17.6984 28.9375ZM17.6984 30.8469C17.5516 30.8469 17.4047 30.7 17.4047 30.5531C17.4047 30.4062 17.5516 30.2594 17.6984 30.2594C17.8453 30.2594 17.9922 30.4062 17.9922 30.5531C17.9922 30.7 17.9188 30.8469 17.6984 30.8469Z"
            fill="white"
          />
          <path
            d="M21.8107 28.9375C20.9295 28.9375 20.2686 29.6719 20.2686 30.4797C20.2686 31.2875 21.0029 32.0219 21.8107 32.0219C22.6186 32.0219 23.3529 31.2875 23.3529 30.4797C23.3529 29.6719 22.692 28.9375 21.8107 28.9375ZM21.8107 30.8469C21.6639 30.8469 21.517 30.7 21.517 30.5531C21.517 30.4062 21.6639 30.2594 21.8107 30.2594C21.9576 30.2594 22.1045 30.4062 22.1045 30.5531C22.1045 30.7 21.9576 30.8469 21.8107 30.8469Z"
            fill="white"
          />
          <path
            d="M25.923 28.9375C25.0418 28.9375 24.3809 29.6719 24.3809 30.4797C24.3809 31.2875 25.1152 32.0219 25.923 32.0219C26.7309 32.0219 27.4652 31.2875 27.4652 30.4797C27.4652 29.6719 26.8043 28.9375 25.923 28.9375ZM25.923 30.8469C25.7762 30.8469 25.6293 30.7 25.6293 30.5531C25.6293 30.4062 25.7762 30.2594 25.923 30.2594C26.0699 30.2594 26.2168 30.4062 26.2168 30.5531C26.2168 30.7 26.0699 30.8469 25.923 30.8469Z"
            fill="white"
          />
          <path
            d="M17.8449 36.5742C16.9637 36.5742 16.3027 37.3086 16.3027 38.1164C16.3027 38.9242 17.0371 39.6586 17.8449 39.6586C18.6527 39.6586 19.3871 38.9242 19.3871 38.1164C19.3871 37.3086 18.6527 36.5742 17.8449 36.5742ZM17.8449 38.4836C17.698 38.4836 17.5512 38.3367 17.5512 38.1898C17.5512 38.043 17.698 37.8961 17.8449 37.8961C17.9918 37.8961 18.1387 38.043 18.1387 38.1898C18.1387 38.3367 17.9918 38.4836 17.8449 38.4836Z"
            fill="white"
          />
          <path
            d="M21.884 36.5742C21.0027 36.5742 20.3418 37.3086 20.3418 38.1164C20.3418 38.9242 21.0762 39.6586 21.884 39.6586C22.6918 39.6586 23.4262 38.9242 23.4262 38.1164C23.4262 37.3086 22.7652 36.5742 21.884 36.5742ZM21.884 38.4836C21.7371 38.4836 21.5902 38.3367 21.5902 38.1898C21.5902 38.043 21.7371 37.8961 21.884 37.8961C22.0309 37.8961 22.1777 38.043 22.1777 38.1898C22.1777 38.3367 22.1043 38.4836 21.884 38.4836Z"
            fill="white"
          />
          <path
            d="M25.9963 36.5742C25.115 36.5742 24.4541 37.3086 24.4541 38.1164C24.4541 38.9242 25.1885 39.6586 25.9963 39.6586C26.8041 39.6586 27.5385 38.9242 27.5385 38.1164C27.5385 37.3086 26.8775 36.5742 25.9963 36.5742ZM25.9963 38.4836C25.8494 38.4836 25.7025 38.3367 25.7025 38.1898C25.7025 38.043 25.8494 37.8961 25.9963 37.8961C26.1432 37.8961 26.29 38.043 26.29 38.1898C26.29 38.3367 26.1432 38.4836 25.9963 38.4836Z"
            fill="white"
          />
          <path
            d="M3.01046 20.1969C3.52452 18.2875 5.14015 16.7453 7.7839 15.7172C8.00421 15.6438 8.15108 15.4235 8.15108 15.2032C8.22452 14.2485 8.81202 12.2657 10.4276 11.1641C11.823 10.136 13.8058 9.9891 16.1558 10.65C16.3761 10.7235 16.6698 10.65 16.8167 10.4297C19.0933 7.34535 22.4714 6.17035 26.437 7.0516C30.4026 8.07972 32.2386 11.1641 32.6792 12.8532C32.7526 13.0735 32.8995 13.2203 33.0464 13.2938C33.2667 13.3672 33.487 13.4407 33.7073 13.5141C35.3964 14.175 36.8651 14.6891 38.3339 18.0672C38.4073 18.2875 38.6276 18.4344 38.9214 18.4344H38.9948C40.6105 18.4344 42.887 19.6828 43.7683 21.7391C44.3558 23.061 44.5026 25.0438 42.2261 27.3938C42.0058 27.6141 42.0058 28.0547 42.2261 28.275C42.373 28.4219 42.5198 28.4219 42.6667 28.4219C42.8136 28.4219 42.9605 28.3485 43.1073 28.2016C46.0448 25.1907 45.4573 22.5469 44.8698 21.1516C43.9151 18.9485 41.4917 17.2594 39.2886 17.1125C37.673 13.5875 35.837 12.9266 34.148 12.2657C34.0011 12.1922 33.9276 12.1922 33.7808 12.1188C33.1198 10.136 30.9901 6.83128 26.7308 5.72972C22.398 4.7016 18.6526 5.95003 16.0089 9.25472C13.4386 8.59378 11.2355 8.88753 9.61983 10.0625C8.00421 11.311 7.1964 13.2203 6.97608 14.6891C4.18546 15.9375 2.42296 17.6266 1.83546 19.9032C0.733895 23.7953 3.6714 27.8344 3.81827 27.9813C4.03858 28.275 4.40577 28.3485 4.69952 28.1282C4.99327 27.9078 5.06671 27.5407 4.8464 27.2469C4.77296 27.1735 2.12921 23.575 3.01046 20.1969Z"
            fill="white"
          />
          <path
            d="M41.565 28.6438C40.6104 28.6438 39.7291 29.3047 39.4354 30.1859H34.6619V22.8422C34.6619 22.475 34.3682 22.1813 34.0744 22.1813C34.0744 22.1813 34.0744 22.1813 34.001 22.1813C33.9275 22.1813 33.9275 22.1813 33.8541 22.1813H30.7697V21.7406C30.7697 20.4188 29.7416 19.3906 28.4197 19.3906H8.44473C7.12285 19.3906 6.09473 20.4188 6.09473 21.7406V23.9437C6.09473 25.2656 7.12285 26.2938 8.44473 26.2938H28.4197C29.7416 26.2938 30.7697 25.2656 30.7697 23.9437V23.4297H33.4135V30.1859H30.8432V29.3781C30.8432 28.0563 29.815 27.0281 28.4932 27.0281H8.51816C7.19629 27.0281 6.16816 28.0563 6.16816 29.3781V31.5813C6.16816 32.9031 7.19629 33.9313 8.51816 33.9313H28.4932C29.815 33.9313 30.8432 32.9031 30.8432 31.5813V31.4344H33.4135V37.3828H30.9166V37.0156C30.9166 35.6938 29.8885 34.6656 28.5666 34.6656H8.5916C7.26973 34.6656 6.2416 35.6938 6.2416 37.0156V39.2188C6.2416 40.5406 7.26973 41.5688 8.5916 41.5688H28.64C29.9619 41.5688 30.99 40.5406 30.99 39.2188V38.6313H33.9275C34.001 38.6313 34.001 38.6313 34.0744 38.6313C34.4416 38.6313 34.6619 38.3375 34.6619 38.0438V31.5078H39.3619C39.5822 32.4625 40.4635 33.1969 41.565 33.1969C42.8135 33.1969 43.8416 32.1687 43.8416 30.9203C43.8416 29.6719 42.74 28.6438 41.565 28.6438ZM29.5213 23.9437C29.5213 24.5312 29.0807 25.0453 28.4197 25.0453H8.44473C7.85723 25.0453 7.34316 24.5312 7.34316 23.9437V21.7406C7.34316 21.1531 7.85723 20.6391 8.44473 20.6391H28.4197C29.0072 20.6391 29.5213 21.1531 29.5213 21.7406V23.9437ZM29.5947 31.5813C29.5947 32.1688 29.1541 32.6828 28.4932 32.6828H8.51816C7.93066 32.6828 7.4166 32.1688 7.4166 31.5813V29.3781C7.4166 28.7906 7.93066 28.2766 8.51816 28.2766H28.4932C29.0807 28.2766 29.5947 28.7906 29.5947 29.3781V31.5813ZM29.6682 39.2188C29.6682 39.8063 29.2275 40.3203 28.5666 40.3203H8.5916C8.0041 40.3203 7.49004 39.8063 7.49004 39.2188V37.0156C7.49004 36.4281 8.0041 35.9141 8.5916 35.9141H28.64C29.2275 35.9141 29.7416 36.4281 29.7416 37.0156V39.2188H29.6682ZM41.565 31.875C41.051 31.875 40.5369 31.4344 40.5369 30.8469C40.5369 30.3328 40.9775 29.8188 41.565 29.8188C42.0791 29.8188 42.5932 30.2594 42.5932 30.8469C42.5197 31.4344 42.0791 31.875 41.565 31.875Z"
            fill="white"
          />
        </svg>
      ),
      title: "Industry-wide shift",
      description:
        "20%+ of VMware customers are actively evaluating migration (Forrester, 2024). Don't be left behind.",
      variant: "blue",
    },
    {
      icon: (
        <svg
          width="50"
          height="50"
          viewBox="0 0 50 50"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M44.2966 26.7963C44.4529 27.0306 44.6091 27.1088 44.8435 27.1088C44.9216 27.1088 45.0779 27.1088 45.156 27.0306L48.5154 25.1556C48.7498 25.0775 48.8279 24.8431 48.8279 24.6088C48.8279 24.3744 48.6716 24.14 48.5154 24.0619L48.2029 23.9056V23.8275H48.1248L45.0779 22.0306C44.7654 21.8744 44.3748 21.9525 44.1404 22.265C43.9841 22.5775 44.0623 22.9681 44.3748 23.2025L45.4685 23.8275H36.1716L30.2341 29.4525L24.4529 23.9838L17.5779 23.8275L18.6716 23.2025C18.9841 23.0463 19.0623 22.5775 18.906 22.265C18.7498 21.9525 18.281 21.8744 17.9685 22.0306L14.4529 24.0619C14.2185 24.2181 14.1404 24.3744 14.1404 24.6869C14.1404 24.9213 14.2966 25.1556 14.4529 25.2338L17.9685 27.1088C18.0466 27.1869 18.2029 27.1869 18.281 27.1869C18.5154 27.1869 18.7498 27.0306 18.906 26.7963C19.0623 26.4838 18.9841 26.0931 18.6716 25.8588L17.2654 25.0775L23.906 25.2338L29.2966 30.3119L24.2185 35.1556C23.281 35.1556 19.9998 34.9994 17.4998 33.6713L17.1873 33.5931L16.8748 33.6713C13.9841 34.765 7.10913 37.4213 3.281 29.9994L3.20288 29.6869C2.656 27.7338 1.48413 23.5931 3.5935 20.3119C5.07788 17.9681 7.89038 16.4838 12.1091 15.7806L12.3435 15.7025L12.4998 15.4681C14.9216 12.3431 18.2029 8.12438 26.1716 9.37438C33.906 10.5463 36.0154 17.8119 36.0935 18.1244L36.1716 18.515L36.5623 18.5931C36.6404 18.5931 40.9373 19.9213 41.9529 22.6556L43.2029 22.1869C42.1091 19.2963 38.4373 17.8119 37.2654 17.4213C36.7185 15.8588 33.9841 9.21813 26.406 8.04625C17.8123 6.71813 14.0623 11.2494 11.6404 14.3744C7.18725 15.1556 4.14038 16.8744 2.49975 19.4525C-0.000246048 23.3588 1.32788 28.0463 1.95288 30.0775L2.031 30.39L2.10913 30.5463C6.406 38.8275 14.2185 36.1713 17.1873 34.9994C20.0779 36.4056 23.6716 36.4838 24.3748 36.4838C24.4529 36.4838 24.531 36.4838 24.531 36.4838H24.7654L30.2341 31.2494L35.4685 36.1713L35.6248 36.3275H45.4685L44.2185 37.0306C43.906 37.1869 43.7498 37.5775 43.9841 37.9681C44.1404 38.2025 44.2966 38.2806 44.531 38.2806C44.6091 38.2806 44.7654 38.2806 44.8435 38.2025L48.2029 36.3275C48.4373 36.2494 48.5154 36.015 48.5154 35.7806C48.5154 35.5463 48.3591 35.3119 48.2029 35.2338L44.6873 33.2025C44.3748 33.0463 43.9841 33.1244 43.7498 33.4369C43.5935 33.7494 43.6716 34.14 43.9841 34.3744L45.156 35.0775H36.2498L31.2498 30.39L36.7185 25.1556H45.9373L44.531 25.9369C44.2185 26.0931 44.1404 26.4838 44.2966 26.7963ZM16.2498 24.6088L16.3279 24.5306V24.6088H16.2498Z"
            fill="#2E3092"
          />
        </svg>
      ),
      title: "Proven migration framework",
      description:
        "Calsoft ensures a structured, low-risk, quick-turnaround, and high-ROI transition.",
      variant: "white",
    },
  ],
}) => {
  return (
    <div className="container space-y-8">
      <p className="text-[38px] font-semibold bg-[linear-gradient(to_right,#2E3092_25%,#ED1C24_50%)] bg-clip-text text-transparent">
        {title}
      </p>
      <div className="grid grid-cols-3 gap-6">
        {cardData.map((ele, idx) => (
          <WhyMigrateCard
            icon={ele.icon}
            description={ele.description}
            title={ele.title}
            key={idx}
            variant={ele.variant}
            idx={idx}
          />
        ))}
      </div>
    </div>
  );
};

const WhyMigrateCard = ({
  icon,
  title,
  description,
  variant = "white",
  idx,
}) => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.8, delay: idx * 0.1 }}
      viewport={{ once: false, amount: 0.3 }}
      className="p-[2px] rounded-2xl bg-gradient-to-b from-[#666666] via-[#666666] to-[#2e3092] h-full hover:scale-105 transition-all"
    >
      <div
        className={`
      rounded-2xl p-8 h-full
      ${
        variant === "blue"
          ? "bg-[#2e3092] text-white"
          : "bg-[#f7f7f7] text-[#000000]"
      }
    `}
      >
        <div className="flex gap-5 h-full">
          <div>{icon}</div>
          <div className="flex flex-col h-full">
            <h3
              className={`
          text-2xl font-semibold mb-4 leading-tight
          ${variant === "blue" ? "text-white" : "text-[#102d7b]"}
        `}
            >
              {title}
            </h3>
            <p
              className={`
          text-base leading-relaxed
          ${variant === "blue" ? "text-white/90" : "text-gray-600"}
        `}
            >
              {description}
            </p>
          </div>
        </div>
      </div>
    </motion.div>
  );
};

const VmwareMigration = ({
  migrationData = [
    {
      imagePosition: "left",
      title: "Seamless VMware migration with proven ROI and efficiency",
      subtitle:
        "Automated, secure, and cost-optimized migration with minimal downtime and up to 50% TCO savings.",
      bulletPoints: [
        "Near-zero disruption with high availability",
        "30-50% TCO reduction via scalable platforms",
        "Secure & compliant transition",
        "Up to 40% cost efficiency gains post-migration",
      ],
      buttonText: "Talk To Expert",
      buttonAction: () => console.log("Talk to Expert clicked"),
      imageUrl: Seamless,
      imageAlt: "Hand holding smartphone with cloud computing interface",
      defaultHighlightWords: [
        "Near-zero",
        "disruption",
        "30-50%",
        "TCO",
        "reduction",
        "Secure",
        "compliant",
        "Up",
        "to",
        "40%",
        "cost",
        "efficiency",
        "gains",
      ],
    },
    {
      imagePosition: "right",
      title: "Calsoft's VMware Workload Migration Solution",
      subtitle:
        "The Migration server-based solution simplifies and secures the transition from VMware to modern platforms, ensuring:",
      bulletPoints: [
        "Faster transitions across environments",
        "Reduced reliance on third-party support",
        "Budget-aligned workload planning",
      ],
      buttonText: "Download Solution Report",
    
      buttonAction: () => showHubSpotForm("download-vmware-solution-report"),
      imageUrl: Workload,
      imageAlt: "Hands with cloud and building interface showing upward growth",
      defaultHighlightWords: [
        "Faster",
        "transitions",
        "Reduced",
        "reliance",
        "Budget-aligned",
        "workload",
        "planning",
      ],
    },
  ],
}) => {
  return (
    <div className="my-10">
      <div className="container space-y-6 lg:space-y-0">
        {migrationData.map((section, index) => (
          <MigrationSection key={index} {...section} />
        ))}
      </div>
    </div>
  );
};

function MigrationSection({
  imagePosition,
  title,
  subtitle,
  bulletPoints,
  buttonText,
  buttonAction,
  imageUrl,
  imageAlt,
  className = "",
  defaultHighlightWords = [],
}) {
  const renderBulletPoint = (point, index) => {
    const text = typeof point === "string" ? point : point.text;
    const highlightWords =
      typeof point === "string"
        ? // Use dynamic defaultHighlightWords instead of hardcoded array
          defaultHighlightWords
        : point.highlightWords || [];

    return (
      <div key={index} className="flex items-start gap-3 lg:gap-4">
        <div className="w-5 h-5 lg:w-6 lg:h-6 bg-[#ba0007] rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
          <ArrowRight className="w-2.5 h-2.5 lg:w-3 lg:h-3 text-white" />
        </div>
        <span className="text-[#000000] text-base lg:text-lg leading-relaxed">
          {text.split(" ").map((word, wordIndex) => {
            const shouldBeBlue = highlightWords.some((keyword) =>
              word.toLowerCase().includes(keyword.toLowerCase())
            );

            return (
              <span
                key={wordIndex}
                className={shouldBeBlue ? "text-[#2e3092] font-semibold" : ""}
              >
                {word}
                {wordIndex < text.split(" ").length - 1 ? " " : ""}
              </span>
            );
          })}
        </span>
      </div>
    );
  };

  return (
    <div
      className={`
        flex flex-col lg:${
          imagePosition === "right" ? "flex-row" : "flex-row-reverse"
        } 
        border border-gray-200 lg:border-0
        ${className}
      `}
    >
      {/* Image Side */}
      <motion.div
        initial={{ x: imagePosition === "right" ? -50 : 50, opacity: 0 }}
        whileInView={{ x: 0, opacity: 1 }}
        transition={{ duration: 0.5, delay: 0.4 }}
        viewport={{ once: false, amount: 0.3 }}
        className="flex-1 order-first lg:order-none"
      >
        <Image
          src={imageUrl}
          alt={imageAlt}
          className={`w-full h-64 lg:h-full object-cover ${
            imagePosition === "right" ? "rounded-l-2xl" : "rounded-r-2xl"
          }`}
        />
      </motion.div>

      {/* Content Side */}
      <motion.div
        initial={{ x: imagePosition === "right" ? 50 : -50, opacity: 0 }}
        whileInView={{ x: 0, opacity: 1 }}
        transition={{ duration: 0.5, delay: 0.3 }}
        viewport={{ once: false, amount: 0.3 }}
        className="flex-1"
      >
        <div className="bg-white px-6 py-4 lg:px-16 lg:py-6 flex flex-col justify-center">
          <h2 className="text-[#2e3092] text-2xl lg:text-4xl font-bold leading-tight mb-2 lg:mb-4">
            {title}
          </h2>

          {subtitle && (
            <p className="text-[#000000] text-base lg:text-lg leading-relaxed mb-4 lg:mb-6">
              {subtitle}
            </p>
          )}

          <div className="space-y-3 lg:space-y-4 mb-6 lg:mb-8">
            {bulletPoints.map((point, index) =>
              renderBulletPoint(point, index)
            )}
          </div>

          {/* <button
            onClick={buttonAction}
            className="bg-[#ba0007] text-white px-6 py-3 lg:px-8 lg:py-4 rounded-full text-base lg:text-lg font-semibold flex items-center gap-2 lg:gap-3 hover:bg-[#9a0006] transition-colors w-fit disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {buttonText}
            <ArrowRight className="w-4 h-4 lg:w-5 lg:h-5" />
          </button> */}
          <ButtonLayout
            text={buttonText}
            image={buttonImage}
            hoverImage={buttonImage}
            className={"w-fit"}
            onClick={buttonAction}
          />
        </div>
      </motion.div>
    </div>
  );
}

const CheckIn = ({
  onClick,
  title = "We’ll take care of your migration.\nCheck in!",
  buttonText = "Request POC",
  data = [
    {
      title: "Readiness assessment",
      description: "Identify workloads, risks, and business goals.",
      position: { left: "15.5%", top: "60%" },
      isTopPosition: false,
    },
    {
      title: "Proof of concept (POC)",
      description: "Run pilot migrations with minimal disruption.",
      position: { left: "35.5%", top: "10%" },
      isTopPosition: true,
    },
    {
      title: "Incremental Full-scale migration",
      description:
        "Optimize, prioritize, secure, and automate workload transitions.",
      position: { left: "56%", top: "60%" },
      isTopPosition: false,
    },
    {
      title: "Post-migration optimization",
      description:
        "Performance tuning, compliance adherence, and ongoing support.",
      position: { left: "76%", top: "10%" },
      isTopPosition: true,
    },
  ],
}) => {
  return (
    <div className="space-y-5 bg-[#f7f7f7] pt-10">
      <div className="container flex justify-between items-center gap-5 xl:gap-8 lg:flex-row flex-col">
        <motion.p
          initial={{ x: -50, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.5, delay: 0.4 }}
          viewport={{ once: false, amount: 0.3 }}
          className="text-[38px] font-bold bg-[linear-gradient(to_right,#2E3092_25%,#ED1C24_88%)] bg-clip-text text-transparent whitespace-pre-line"
        >
          {title}
        </motion.p>
        <motion.div
          initial={{ x: 50, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.5, delay: 0.4 }}
          viewport={{ once: false, amount: 0.3 }}
        >
          <ButtonLayout
            text={buttonText}
            image={buttonImage}
            hoverImage={buttonImage}
            className={"w-fit"}
            onClick={onClick}
          />
        </motion.div>
      </div>
      <WaveMigrationUI steps={data} />
    </div>
  );
};

function WaveMigrationUI({ steps }) {
  return (
    <div className="pt-0">
      <div className="relative w-full">
        {/* Wave SVG Background */}
        <div className="relative w-full h-[25rem]">
          <svg
            width="1521"
            height="254"
            viewBox="0 0 1521 254"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="w-full h-full"
          >
            <path
              d="M914.159 253.134C835.42 253.134 795.863 189.92 757.567 128.787C718.556 66.4945 681.727 7.64561 606.773 7.64561C531.819 7.64561 494.99 66.4945 455.978 128.787C417.717 189.92 378.126 253.134 299.386 253.134C220.647 253.134 181.09 189.92 142.795 128.787C105.897 69.8359 71.0461 14.1238 3.90125 8.15704C2.02569 7.98656 0.627552 6.34997 0.798057 4.47472C0.968562 2.59946 2.60541 1.16745 4.48096 1.37202C75.0018 7.64561 112.411 67.381 148.592 125.173C187.603 187.466 224.432 246.315 299.386 246.315C374.34 246.315 411.169 187.466 450.181 125.173C488.442 64.0397 528.034 0.826492 606.773 0.826492C685.512 0.826492 725.069 64.0397 763.365 125.173C802.376 187.466 839.205 246.315 914.159 246.315C989.113 246.315 1025.98 187.466 1064.95 125.173C1103.22 64.0397 1142.81 0.826492 1221.55 0.826492C1300.28 0.826492 1339.88 64.0397 1378.14 125.173C1415.07 184.124 1449.92 239.802 1517.06 245.803C1518.94 245.974 1520.34 247.61 1520.17 249.485C1520 251.361 1518.33 252.725 1516.48 252.588C1445.96 246.315 1408.56 186.579 1372.37 128.787C1333.36 66.4945 1296.53 7.64561 1221.58 7.64561C1146.63 7.64561 1109.76 66.4945 1070.75 128.787C1032.49 189.92 992.898 253.134 914.159 253.134Z"
              fill="url(#paint0_linear_44_239)"
            />
            <defs>
              <linearGradient
                id="paint0_linear_44_239"
                x1="0.783977"
                y1="126.98"
                x2="1520.18"
                y2="126.98"
                gradientUnits="userSpaceOnUse"
              >
                <stop offset="0.605769" stopColor="#2E3092" />
                <stop offset="1" stopColor="#BA0007" />
              </linearGradient>
            </defs>
          </svg>

          {steps.map((step, idx) => (
            <motion.div
              key={step.id}
              initial={{ opacity: 0, y: step.isTopPosition ? -30 : 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              viewport={{ once: false, amount: 0.3 }}
              className="absolute"
              style={{ left: step.position.left, top: step.position.top }}
            >
              <div className="relative">
                <div className="w-28 h-28 rounded-full bg-white bg-[linear-gradient(to_bottom,#2E3092_60%,#ED1C24_105%)] p-1.5">
                  <div className="w-full h-full rounded-full bg-white flex items-center justify-center">
                    <span className="text-6xl text-[#2E3092] font-londrina">
                      0{idx + 1}
                    </span>
                  </div>
                </div>
                <div
                  className={`absolute left-1/2 transform -translate-x-1/2 w-52 text-center ${
                    step.isTopPosition ? "top-32" : "-top-32"
                  }`}
                >
                  <h3 className="text-xl font-semibold text-black mb-2">
                    {step.title}
                  </h3>
                  <p className="text-gray-600 text-sm leading-relaxed">
                    {step.description}
                  </p>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </div>
  );
}

export { PrefferedPlatform, WhyMigrate, VmwareMigration, CheckIn };
